[春休み企画 WEBRTCと最新webAPIを使ってみよう! ]

https://html5experts.jp/mganeko/19814/

https://html5experts.jp/mganeko/20013/

# install
npm install socket.io
2017/2/10 npm install が途中で止まる問題
setx  TEMP C:\tmp
としてからbashを起動しなおしてset TEMP
でいけた

# データチャネル
http://qiita.com/udonchan/items/7f5ffa9e8982ae1636c3
# WebRTC技術
## 必要なデータ
Session Description Protocol (SDP)
- 通信内容、鍵
ICE Candidate
- p2p通信するための情報
- 経路情報など


# データ共有方法

## 分散案
全ての端末がすべてのデータを持ち計算。
何らかのアクションがあった場合そのアクションのみをブロードキャストする

参加した際にはいずれか一台に場の情報を問い合わせる必要あり

## マスタスレーブ案
マスタがすべてのデータをもつ
各端末は表示領域に関係するデータのみをマスタから受け取る。
スレーブでも表示領域の計算を行う。

# センサ情報関連
- 加速度
https://developer.mozilla.org/ja/docs/Web/API/Detecting_device_orientation

## カメラトラッキング
### x,y軸
移動量の平均
### z軸
x-z 平面で考える
(奥行方向変化量)　＝　z*(x方向変化量)/x 
ただし、zは不明のため、zの変化量は小さいとして、スケールを無視する（比例定数は適宜）
(奥行方向変化量)　＝　k*(x方向変化量)/x 
3軸で考えると、
[奥行方向変化量]　<==(比例関係)==> (a,b)/|a|^2 
  ただし、aは画面中心から注目画素位置までのベクトル、
  bは注目画素の変化量のベクトル


### z軸回転
（z回転量θ） = (a*b)z/|a|^2
ただし、(a*b)z はa,bの外積のz軸成分
上のはθが微小量の場合。
有限の場合はsinθになるので、
arcsinとればいい

## 外部カメラトラッキング案
複数の外部カメラでトラッキングする
何らかの手段で対象デバイスをマーキング
jsfeatのトラッキングを使用してカメラ平面での位置を確定
複数のデータを組み合わせて3軸（6軸）位置がわかる？


# ブラウザ拡張アプリ案
bluetooth
ローカルストレージ htmlで扱えるらしい
カメラ


# デザイン
http://paradise.antytle.com/2015/reallife-fps-maps/tutorial/credit/

#android検証
http://qiita.com/syarihu/items/23f5cd9edc9d081e0d65
chrome://inspect/#devices
実機とusb接続で、ログ確認、要素確認、スタイル操作
さらにportforwarding でlocalhost接続できる!

# webpush通知
## service worker
タブの裏で動く、ページとは独立したスレッド

## 2/24日report
一通りwebpushが動くように実装した
### 対応内容
- 初回以下にアクセス
http://localhost/webRTC/service-worker/push/index.html
firebaseのdatabaseに機種のデータを登録する

- 以下のnodejsを実行すると登録した機種にwebpushが届く
/webrtc/service-worker/push/push.js

### 実行結果
pc/androidとも chrome, firefoxでpush通知され、クリックで指定URLが開く
ただし、android/firefox はバイブレーションなし、またfirefoxを閉じている場合URLに遷移しない

### 問題点
- firebaseの書き込み権限を指定すると、書き込めない。アカウント設定か？鍵(serviceAccountCredentials.json)として「mater」アカウントを使用
- nodejsのSDKでデータが見られない。書き込みはできる。仕方ないからデータ参照はRESTAPIを使った。


# babel廻り
ES2015 = ECMAScript6 = ES6 
の記述をES5に変換する
現状、最新ブラウザではかなりES6も実装されているよう。ただし、importはできなかった

http://www.yoheim.net/blog.php?q=20160803
でできた

## まとめ
モダンブラウザではクラスをprototypeベースでなく書けるので使いたい
アロー演算子でsetTimeOutなどの中のコールバック関数内のthisが記述されたスコープを参照する。
これでthisを別の変数に保管する必要がない!!
 
# 2D library
create.js vs pixi.js

## good sample
https://github.com/ofZach/landlines

- mouseの動きをうラウド
http://donottouch.org/


# browser wars

## 情報源　
- IE
http://itlifehack.jp/archives/8152636.html

